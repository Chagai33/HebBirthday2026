rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isTenantMember(tenantId) {
      return exists(/databases/$(database)/documents/user_tenant_memberships/$(request.auth.uid + '_' + tenantId));
    }
    
    function isTenantOwner(tenantId) {
      return get(/databases/$(database)/documents/tenants/$(tenantId)).data.owner_id == request.auth.uid;
    }
    
    function isTenantAdmin(tenantId) {
      let membership = get(/databases/$(database)/documents/user_tenant_memberships/$(request.auth.uid + '_' + tenantId));
      return membership.data.role in ['owner', 'admin'];
    }
    
    match /profiles/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if false;
    }
    
    match /tenants/{tenantId} {
      allow read: if isAuthenticated() && (
        !exists(/databases/$(database)/documents/user_tenant_memberships/$(request.auth.uid + '_' + tenantId)) ||
        isTenantMember(tenantId)
      );
      allow create: if isAuthenticated() && request.resource.data.owner_id == request.auth.uid;
      allow update: if isAuthenticated() && isTenantAdmin(tenantId);
      allow delete: if isAuthenticated() && isTenantOwner(tenantId);
    }
    
    match /user_tenant_memberships/{membershipId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && (
        request.resource.data.user_id == request.auth.uid ||
        membershipId.matches(request.auth.uid + '_.*')
      );
      allow update, delete: if isAuthenticated() && 
        (request.auth.uid == resource.data.user_id || 
         isTenantAdmin(resource.data.tenant_id));
    }
    
    match /groups/{groupId} {
      allow read: if isAuthenticated() && isTenantMember(resource.data.tenant_id);
      allow write: if isAuthenticated() && isTenantMember(request.resource.data.tenant_id);
    }
    
    match /birthdays/{birthdayId} {
      allow read: if isAuthenticated() && isTenantMember(resource.data.tenant_id);
      allow write: if isAuthenticated() && isTenantMember(request.resource.data.tenant_id);
    }
    
    match /wishlist_items/{itemId} {
      allow read: if isAuthenticated() && isTenantMember(resource.data.tenant_id);
      allow write: if isAuthenticated() && isTenantMember(request.resource.data.tenant_id);
    }
  }
}
