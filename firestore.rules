rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null;
    }

    function getUserTenantId() {
      return request.auth.token.tenantId;
    }

    function hasCustomClaims() {
      return request.auth.token.tenantId != null;
    }

    function isTenantMember(tenantId) {
      if (!isAuthenticated()) return false;
      if (hasCustomClaims()) {
        return getUserTenantId() == tenantId;
      }
      return true;
    }

    function isTenantOwner(tenantId) {
      if (!isAuthenticated()) return false;
      if (hasCustomClaims()) {
        return getUserTenantId() == tenantId && request.auth.token.role == 'owner';
      }
      return get(/databases/$(database)/documents/tenants/$(tenantId)).data.owner_id == request.auth.uid;
    }

    function hasRole(role) {
      return isAuthenticated() && request.auth.token.role == role;
    }

    match /profiles/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if false;
    }

    match /tenants/{tenantId} {
      allow read: if isTenantMember(tenantId);
      allow create: if isAuthenticated() && request.resource.data.owner_id == request.auth.uid;
      allow update: if isTenantOwner(tenantId);
      allow delete: if isTenantOwner(tenantId);
    }

    match /tenant_members/{membershipId} {
      allow read: if isAuthenticated() &&
                     (request.auth.uid == resource.data.user_id ||
                      isTenantMember(resource.data.tenant_id));
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.user_id;
      allow update, delete: if isAuthenticated() && request.auth.uid == resource.data.user_id;
    }

    match /groups/{groupId} {
      allow read: if isAuthenticated() && isTenantMember(resource.data.tenant_id);
      allow create: if isAuthenticated() &&
                       (hasCustomClaims() ? request.resource.data.tenant_id == getUserTenantId() : true);
      allow update, delete: if isAuthenticated() &&
                               isTenantMember(resource.data.tenant_id);
    }

    match /birthdays/{birthdayId} {
      allow read: if isAuthenticated() && isTenantMember(resource.data.tenant_id);
      allow create: if isAuthenticated() &&
                       (hasCustomClaims() ? request.resource.data.tenant_id == getUserTenantId() : true);
      allow update, delete: if isAuthenticated() &&
                               isTenantMember(resource.data.tenant_id);
    }

    match /wishlist_items/{itemId} {
      allow read: if isAuthenticated() && isTenantMember(resource.data.tenant_id);
      allow create: if isAuthenticated() &&
                       (hasCustomClaims() ? request.resource.data.tenant_id == getUserTenantId() : true);
      allow update, delete: if isAuthenticated() &&
                               isTenantMember(resource.data.tenant_id);
    }

    match /rate_limits/{docId} {
      allow read, write: if isAuthenticated();
    }
  }
}
