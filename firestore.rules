rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isTenantMember(tenantId) {
      return isAuthenticated() &&
        exists(/databases/$(database)/documents/tenant_members/$(request.auth.uid));
    }

    match /profiles/{userId} {
      allow read: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if false;
    }

    match /tenants/{tenantId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.resource.data.owner_id == request.auth.uid;
      allow update: if isAuthenticated() && resource.data.owner_id == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.owner_id == request.auth.uid;
    }

    match /tenant_members/{memberId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();
    }

    match /birthdays/{birthdayId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.resource.data.created_by == request.auth.uid;
      allow update: if isAuthenticated() && request.resource.data.updated_by == request.auth.uid;
      allow delete: if isAuthenticated();
    }

    match /groups/{groupId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.resource.data.created_by == request.auth.uid;
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();
    }

    match /wishlist_items/{itemId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();
    }

    match /{document=**} {
      allow read, write: if false;
    }
  }
}
