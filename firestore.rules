rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null;
    }

    function getUserId() {
      return request.auth.uid;
    }

    function isOwner(userId) {
      return isAuthenticated() && getUserId() == userId;
    }

    function isTenantMember(tenantId) {
      return isAuthenticated() &&
             exists(/databases/$(database)/documents/userTenantMemberships/$(getUserId() + '_' + tenantId));
    }

    function getTenantRole(tenantId) {
      return get(/databases/$(database)/documents/userTenantMemberships/$(getUserId() + '_' + tenantId)).data.role;
    }

    function isTenantOwner(tenantId) {
      return isTenantMember(tenantId) && getTenantRole(tenantId) == 'owner';
    }

    function isTenantAdmin(tenantId) {
      return isTenantMember(tenantId) &&
             (getTenantRole(tenantId) == 'owner' || getTenantRole(tenantId) == 'admin');
    }

    match /users/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isAuthenticated() && isOwner(userId);
      allow delete: if false;
    }

    match /tenants/{tenantId} {
      allow read: if isTenantMember(tenantId);
      allow create: if isAuthenticated() &&
                      request.resource.data.ownerId == getUserId();
      allow update: if isTenantOwner(tenantId);
      allow delete: if isTenantOwner(tenantId);
    }

    match /userTenantMemberships/{membershipId} {
      allow read: if isAuthenticated() &&
                    (membershipId.matches('^' + getUserId() + '_.*') ||
                     isTenantMember(resource.data.tenantId));
      allow create: if isAuthenticated() &&
                      (request.resource.data.userId == getUserId() ||
                       isTenantAdmin(request.resource.data.tenantId));
      allow update: if isTenantAdmin(resource.data.tenantId);
      allow delete: if isTenantAdmin(resource.data.tenantId) ||
                      (isAuthenticated() && resource.data.userId == getUserId());
    }

    match /birthdays/{birthdayId} {
      allow read: if isTenantMember(resource.data.tenantId);
      allow create: if isAuthenticated() &&
                      isTenantMember(request.resource.data.tenantId) &&
                      request.resource.data.createdBy == getUserId() &&
                      request.resource.data.updatedBy == getUserId();
      allow update: if isTenantMember(resource.data.tenantId);
      allow delete: if isTenantAdmin(resource.data.tenantId);
    }

    match /tenantInvitations/{invitationId} {
      allow read: if isAuthenticated() &&
                    (resource.data.email == request.auth.token.email ||
                     isTenantAdmin(resource.data.tenantId));
      allow create: if isAuthenticated() &&
                      isTenantAdmin(request.resource.data.tenantId) &&
                      request.resource.data.invitedBy == getUserId();
      allow update: if isAuthenticated() &&
                      (resource.data.email == request.auth.token.email ||
                       isTenantAdmin(resource.data.tenantId));
      allow delete: if isTenantAdmin(resource.data.tenantId);
    }

    match /{document=**} {
      allow read, write: if false;
    }
  }
}
