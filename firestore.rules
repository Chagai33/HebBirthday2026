rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null;
    }

    function isTenantOwner(tenantId) {
      return get(/databases/$(database)/documents/tenants/$(tenantId)).data.owner_id == request.auth.uid;
    }
    
    match /profiles/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if false;
    }
    
    match /tenants/{tenantId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.resource.data.owner_id == request.auth.uid;
      allow update: if isAuthenticated() && isTenantOwner(tenantId);
      allow delete: if isAuthenticated() && isTenantOwner(tenantId);
    }

    match /tenant_members/{membershipId} {
      allow read: if isAuthenticated() && request.auth.uid == resource.data.user_id;
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.user_id;
      allow update, delete: if isAuthenticated() && request.auth.uid == resource.data.user_id;
    }
    
    match /groups/{groupId} {
      allow read, write: if isAuthenticated();
    }

    match /birthdays/{birthdayId} {
      allow read, write: if isAuthenticated();
    }

    match /wishlist_items/{itemId} {
      allow read, write: if isAuthenticated();
    }
  }
}
